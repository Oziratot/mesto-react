{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","utils/utils.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","src","link","alt","name","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","avatar","about","map","key","Footer","PopupWithForm","isOpen","onClose","title","children","submitButtonText","onSubmit","noValidate","ImagePopup","Object","keys","api","serverUrl","headers","this","_serverUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","_getResponseData","data","method","body","JSON","stringify","cardId","authorization","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","placeholder","id","value","onChange","target","required","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","newPlaceName","setNewPlaceName","newPlaceLink","setNewPlaceLink","App","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","cardList","setCardList","closeAllPopups","all","getUserInfo","getInitialCards","catch","err","console","log","Provider","setUserInfo","addNewCard","newCard","setUserAvatar","changeLikeCardStatus","newCards","c","deleteCard","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f89c2031.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n          <div className=\"header__logo\"></div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n\r\n    function handleClick() {\r\n        onCardClick(card);\r\n    };\r\n\r\n    function handleLikeClick() {\r\n        onCardLike(card);\r\n    };\r\n\r\n    function handleDeleteClick() {\r\n        onCardDelete(card);\r\n    }\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    const isOwn = card.owner._id === currentUser._id;\r\n    const cardDeleteButtonClassName = (`places-grid__delete-btn ${isOwn ? 'places-grid__delete-btn_visible' : 'places-grid__delete-btn_hidden'}`)\r\n\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    const cardLikeButtonClassName = (`places-grid__like-btn ${isLiked ? 'places-grid__like-btn_active' : ''}`);\r\n\r\n    return (\r\n        <li className=\"places-grid__element\">\r\n            <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\r\n            \r\n            <img className='places-grid__image' \r\n                 src={card.link} \r\n                 alt={card.name} \r\n                 onClick={handleClick}/>\r\n\r\n            <div className='places-grid__description'>\r\n                <h2 className=\"places-grid__text\">{card.name}</h2>\r\n                <div className=\"places-grid__like-container\">\r\n                    <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n                    <p className=\"places-grid__like-counter\">{card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick, cards , onCardLike, onCardDelete }) {\r\n\r\n  //using context\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n      \r\n      return (\r\n        <main className=\"content\">\r\n\r\n          <section className=\"profile\">\r\n            <div className=\"profile__avatar-container\" onClick={onEditAvatar}>\r\n              <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Фото профиля\" />\r\n            </div>\r\n            <div className=\"profile__profile-info\">\r\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n\r\n              <button onClick={onEditProfile} \r\n                      type=\"button\" \r\n                      className=\"profile__edit-btn\"></button>\r\n\r\n              <p className=\"profile__description\">{currentUser.about}</p>\r\n            </div>\r\n\r\n            <button onClick={onAddPlace} \r\n                    type=\"button\" \r\n                    className=\"profile__add-btn\"></button>\r\n\r\n          </section>\r\n\r\n          <section className=\"places\">\r\n            <ul className=\"places-grid\">\r\n              {cards.map((card) => (\r\n                <Card key={card._id} \r\n                      card={card} \r\n                      onCardClick={onCardClick}\r\n                      onCardLike={onCardLike}\r\n                      onCardDelete={onCardDelete}/>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\n\r\nexport default Main","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n          <p className=\"footer__copyright\">&copy;2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction PopupWithForm({ name, isOpen, onClose, title, children, submitButtonText, onSubmit }) {\r\n    return (\r\n        <div className={`popup popup_modal_type_${name} ${isOpen && 'popup_opened'}`}>\r\n            <form name={`${name}`} \r\n                className={`popup__container popup__container_type_${name}`}\r\n                onSubmit={onSubmit} \r\n                noValidate>\r\n                    \r\n                    <button type=\"button\" \r\n                            className=\"popup__close-btn\" \r\n                            onClick={onClose}></button>\r\n\r\n                    <p className=\"popup__text\">{title}</p>\r\n                    {children}\r\n                    <button type=\"submit\" className=\"popup__save-btn\">{submitButtonText}</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm","import React from 'react'\r\n\r\nfunction ImagePopup({ onClose, card }) {\r\n    return (\r\n        <div className={`popup popup_modal_type_photo ${(Object.keys(card).length !== 0) && 'popup_opened'}`}>\r\n          <div className='popup__image-container'>\r\n\r\n            <button type=\"button\" \r\n                    className=\"popup__close-btn\" \r\n                    onClick={onClose}></button>\r\n\r\n            <img  className=\"popup__full-image\" \r\n                  src={card.link} \r\n                  alt={card.name}/>\r\n                  \r\n            <p className=\"popup__image-title\">{card.name}</p>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup","import { serverUrl, headers } from './utils';\r\n\r\nexport class Api {\r\n    constructor({ serverUrl, headers }) {\r\n      this._serverUrl = serverUrl;\r\n      this._headers = headers;\r\n    }\r\n  \r\n    _getResponseData(res) {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n  \r\n      return Promise.reject(`Ошибка ${res.status}`);\r\n    }\r\n  \r\n    getUserInfo() {\r\n      return fetch(`${this._serverUrl}users/me`, {\r\n        headers: this._headers\r\n      })\r\n        .then(this._getResponseData);\r\n    }\r\n  \r\n    getInitialCards() {\r\n      return fetch(`${this._serverUrl}cards`, {\r\n        headers: this._headers\r\n      })\r\n        .then(this._getResponseData);\r\n    }\r\n  \r\n    setUserInfo(data) {\r\n      return fetch(`${this._serverUrl}users/me`, {\r\n        method: 'PATCH',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n          name: data.name,\r\n          about: data.about\r\n        })\r\n      })\r\n        .then(this._getResponseData);\r\n    }\r\n  \r\n    addNewCard(data) {\r\n      return fetch(`${this._serverUrl}cards`, {\r\n        method: 'POST',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n          name: data.name,\r\n          link: data.link\r\n        })\r\n      })\r\n        .then(this._getResponseData);\r\n    }\r\n  \r\n    /*setLike(cardId) {\r\n      return fetch(`${this._serverUrl}cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: this._headers\r\n      })\r\n        .then(this._getResponseData);\r\n    }\r\n  \r\n    deleteLike(cardId) {\r\n      return fetch(`${this._serverUrl}cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: this._headers\r\n      })\r\n        .then(this._getResponseData);\r\n    }*/\r\n\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n      return fetch(`${this._serverUrl}cards/likes/${cardId}`, {\r\n        method: (isLiked ? \"PUT\" : \"DELETE\"),\r\n        headers: this._headers\r\n      })\r\n        .then(this._getResponseData);\r\n    }\r\n  \r\n    deleteCard(cardId) {\r\n      return fetch(`${this._serverUrl}cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: this._headers\r\n      })\r\n        .then(this._getResponseData);\r\n    }\r\n  \r\n    setUserAvatar(link) {\r\n      return fetch(`${this._serverUrl}users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n          avatar: link\r\n        })\r\n      })\r\n        .then(this._getResponseData);\r\n    }\r\n  }\r\n\r\n  \r\n  const api = new Api({\r\n      serverUrl: serverUrl,\r\n      headers: headers\r\n  })\r\n\r\n  export default api","  export const serverUrl = 'https://mesto.nomoreparties.co/v1/cohort-15/';\r\n  export const headers = {\r\n    authorization: 'dfe63f2a-8f86-4355-ad0e-f940e143b2d0',\r\n    'Content-Type': 'application/json'\r\n  }  ","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  function handleNameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleDescriptionChange(e) {\r\n    setDescription(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateUser({\r\n      name: name,\r\n      about: description\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n    return (\r\n        <PopupWithForm name=\"edit\" \r\n                        title=\"Редактировать профиль\" \r\n                        isOpen={isOpen}\r\n                        onClose={onClose}\r\n                        onSubmit={handleSubmit}\r\n                        submitButtonText=\"Сохранить\"\r\n                        children={\r\n                          <>\r\n                            <label className=\"popup__field\">\r\n                              <input type=\"text\"\r\n                                    className=\"popup__input popup__input_type_name\"\r\n                                    placeholder=\"Имя\"\r\n                                    id=\"name-input\"\r\n                                    name=\"name\"\r\n                                    value={name || ''}\r\n                                    onChange={handleNameChange}\r\n                                    required\r\n                                    minLength=\"2\"\r\n                                    maxLength=\"40\" />\r\n                              <span className=\"popup__input-error\" id=\"name-input-error\"></span>\r\n                            </label>\r\n                            <label className=\"popup__field\">\r\n                              <input type=\"text\" \r\n                                  className=\"popup__input popup__input_type_description\" \r\n                                  placeholder=\"Описание\" \r\n                                  id=\"description-input\" \r\n                                  name=\"description\"\r\n                                  value={description || ''}\r\n                                  onChange={handleDescriptionChange}\r\n                                  required \r\n                                  minLength=\"2\" \r\n                                  maxLength=\"200\" />\r\n                              <span className=\"popup__input-error\" id=\"description-input-error\"></span>\r\n                            </label>\r\n                        </>\r\n                        }/>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateAvatar(avatarRef.current.value)\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm  name=\"avatar\"\r\n                          title=\"Обновить аватар\"\r\n                          isOpen={isOpen}\r\n                          onClose={onClose}\r\n                          onSubmit={handleSubmit}\r\n                          submitButtonText=\"Обновить\"\r\n                          children={\r\n                              <label className=\"popup__field\">\r\n                                <input  type=\"url\" \r\n                                        className=\"popup__input popup__input_type_image-link\" \r\n                                        id=\"place-url\" \r\n                                        name=\"link\" \r\n                                        placeholder=\"Ссылка на аватар\"\r\n                                        ref = {avatarRef}\r\n                                        required />\r\n                                <span className=\"popup__input-error\" id=\"place-url-error\"></span>\r\n                              </label>\r\n                          }/>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n\r\n    const [newPlaceName, setNewPlaceName] = React.useState('');\r\n    const [newPlaceLink, setNewPlaceLink] = React.useState('');\r\n\r\n    function handleNewPlaceChange(e) {\r\n        setNewPlaceName(e.target.value);\r\n    }\r\n\r\n    function handleNewPlaceLinkChange(e) {\r\n        setNewPlaceLink(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onAddPlace({\r\n            name: newPlaceName,\r\n            link: newPlaceLink\r\n        })\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm  name=\"add\"\r\n                          title=\"Новое место\"\r\n                          isOpen={isOpen}\r\n                          onClose={onClose}\r\n                          onSubmit={handleSubmit}\r\n                          submitButtonText=\"Добавить\"\r\n                          children={\r\n                            <>\r\n                              <label className=\"popup__field\">\r\n                                <input  type=\"text\" \r\n                                        className=\"popup__input popup__input_type_place\" \r\n                                        id=\"place-input\" \r\n                                        name=\"name\" \r\n                                        placeholder=\"Название\"\r\n                                        value={newPlaceName}\r\n                                        onChange={handleNewPlaceChange}\r\n                                        required \r\n                                        minLength=\"1\" \r\n                                        maxLength=\"30\" />\r\n                                <span className=\"popup__input-error\" id=\"place-input-error\"></span>\r\n                              </label>\r\n                              <label className=\"popup__field\">\r\n                                <input  type=\"url\" \r\n                                        className=\"popup__input popup__input_type_image-link\" \r\n                                        id=\"place-url\" \r\n                                        name=\"link\" \r\n                                        placeholder=\"Ссылка на картинку\"\r\n                                        value={newPlaceLink}\r\n                                        onChange={handleNewPlaceLinkChange}\r\n                                        required />\r\n                                <span className=\"popup__input-error\" id=\"place-url-error\"></span>\r\n                              </label>\r\n                            </>\r\n                          }/>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm'\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/api';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n  const [cardList, setCardList] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n      .then(([data, cards]) => {\r\n        setCurrentUser(data);\r\n        setCardList(cards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }, []);\r\n\r\n  //opening functions for popups\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  \r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n  \r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n\r\n  }\r\n\r\n  //full image of card\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  //setting new user info and avatar\r\n  function handleUpdateUser(data) {\r\n    api.setUserInfo(data)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  function handleUpdateAvatar(link) {\r\n    api.setUserAvatar(link)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  //\"like\" and \"delete\" card functions\r\n  function handleLikeCard(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api.changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cardList.map((c) => c._id === card._id ? newCard : c);\r\n        setCardList(newCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  function handleDeleteCard(card) {\r\n    api.deleteCard(card._id)\r\n      .then(() => {\r\n        const newCards = cardList.filter((c) => c._id !== card._id);\r\n        setCardList(newCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  //add new card\r\n  function handleAddPlaceSubmit(data) {\r\n    api.addNewCard(data)\r\n      .then((newCard) => {\r\n        setCardList([newCard, ...cardList]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  //closing all popups\r\n  function closeAllPopups() {\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setSelectedCard({});\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      \r\n      <div className=\"App\">\r\n\r\n        <div className=\"page\">\r\n          \r\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n\r\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit}/>\r\n                    \r\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n\r\n          <PopupWithForm  name=\"confirm\"\r\n                          title=\"Вы уверены?\"\r\n                          submitButtonText=\"Да\"/>\r\n\r\n          <ImagePopup onClose={closeAllPopups}\r\n                      card={selectedCard}/>\r\n\r\n          <Header />\r\n\r\n          <Main onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                onEditAvatar={handleEditAvatarClick}\r\n                onCardClick={handleCardClick}\r\n                onCardLike={handleLikeCard}\r\n                onCardDelete={handleDeleteCard}\r\n                cards={cardList}/>\r\n\r\n          <Footer />\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </CurrentUserContext.Provider>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}